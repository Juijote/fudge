plugins {
    id 'com.android.application'
}

android {
    namespace 'dev.danielc.fujiapp'
    compileSdk 33

    defaultConfig {
        applicationId "dev.danielc.fujiapp"
        minSdk 21
        targetSdk 33
        versionCode 5
        versionName "0.1.3"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    externalNativeBuild {
        ndkBuild {
            path file('../lib/Android.mk')
        }
    }
}

dependencies {
    implementation 'com.jsibbold:zoomage:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
}

/*
// https://github.com/Dushistov/flapigen-rs/blob/master/android-example/app/build.gradle
def rustBasePath = "../rust/"
def archTriplets = [
    'armeabi-v7a': 'armv7-linux-androideabi',
    'arm64-v8a': 'aarch64-linux-android',
    'x86': 'i686-linux-android',
    'x86_64': 'x86_64-linux-android',
]
tasks.create(name: "rust", description: "Build all rust releases")
archTriplets.each { arch, target ->
    tasks.create(name: "cargo-build-${arch}", type: Exec, description: "Running cargo for for ${arch}") {
        workingDir rustBasePath
        commandLine 'cargo', 'build', "--target=${target}", '--release'
    }
    rust.dependsOn "cargo-build-${arch}"
}

tasks.withType(JavaCompile) { compileTask -> compileTask.dependsOn "rust" }
*/
